/**
 * @type {Component}
 */
const currentTime = {
	insertId: "current-time",
	templates: [
		new HDO({
			tagName: "div", classes: ["time-wrapper"], contents: [
				new HDO({
					tagName: "div", classes: ["time-container"], contents: [
						new HDO({
							tagName: "div", classes: ["top-container"], contents: [
							]
						}),

						new HDO({
							tagName: "div", classes: ["middle-container"], contents: [
								new HDO({
									tagName: "svg", classes: ["hour-circle"], attributes: { viewBox: "0 0 2 2" }, contents: [
										new HDO({ tagName: "path", attributes: { "stroke-width": "0.2", "fill-opacity": 0, "stroke-opacity": 1, stroke: "black" } }),
									]
								}),
								new HDO({
									tagName: "div", classes: ["number-container"], contents: [
										new HDO({ tagName: "span", classes: ["hour"] }), new HDO({ tagName: "span", contents: [":"], classes: ["first-colon"] }),
										new HDO({ tagName: "span", classes: ["minute"] }), new HDO({ tagName: "span", contents: [":"], classes: ["second-colon"] }),
										new HDO({ tagName: "span", classes: ["second"] }), new HDO({ tagName: "span", contents: ["."], classes: ["period"] }),
										new HDO({ tagName: "span", classes: ["millisecond"] }),
									]
								}),
							]
						}),

						new HDO({
							tagName: "div", classes: ["bottom-container"], contents: [
							]
						}),
					]
				}),
			]
		}),
	],

	styles: {
		".time-wrapper": {
			textAlign: "center",
			paddingBlock: "2rem",
			fontSize: "2rem",

			".middle-container": {
				display: "flex",
				flexDirection: "row-reverse",
				justifyContent: "center",
				alignItems: "center",
				gap: "1rem",

				".hour-circle": {
					width: "2rem",
					height: "2rem",
				},

				".number-container": {
					position: "relative",
					top: "3px",
				},
			}
		}
	},

	script: () => {
		const twoDigit = (num, digit = 2) => {
			return ("0".repeat(digit - 1) + num).slice(-digit);
		}

		const setTime = () => {
			const now = new Date();
			const hour = now.getHours();
			const minute = now.getMinutes();
			const second = now.getSeconds();
			const millisecond = now.getMilliseconds();

			const floatSecond = second + millisecond / 1000;

			const timePath = document.querySelector(".hour-circle path");

			if (floatSecond <= 30) {
				timePath.setAttribute("d", `M 1 0.1 A 0.9 0.9 0 ${(floatSecond <= 15) ? 0 : 1} 1 ${1 + 0.9 * Math.cos((floatSecond - 7.5) / 15 * Math.PI)} ${1 + 0.9 * Math.sin((floatSecond - 7.5) / 15 * Math.PI)}`);
			}
			else {
				timePath.setAttribute("d", `M ${1 + 0.9 * Math.cos((floatSecond - 37.5) / 15 * Math.PI)} ${1 + 0.9 * Math.sin((floatSecond - 37.5) / 15 * Math.PI)} A 0.9 0.9 0 ${(floatSecond <= 45) ? 1 : 0} 1 1 0.1`);
			}

			document.querySelector(".hour").textContent = twoDigit(hour);
			document.querySelector(".minute").textContent = twoDigit(minute);
			document.querySelector(".second").textContent = twoDigit(second);
			document.querySelector(".millisecond").textContent = twoDigit(millisecond, 3);

			requestAnimationFrame(setTime);
		}

		requestAnimationFrame(setTime);
	}
}